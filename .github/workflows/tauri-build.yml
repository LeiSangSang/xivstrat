name: Build Tauri App

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: --target universal-apple-darwin
          - platform: windows-latest
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        run: echo "APP_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Update Tauri Config Version
        run: |
          sed -i.bak "s/\"version\": \".*\"/\"version\": \"${{ env.APP_VERSION }}\"/" src-tauri/tauri.conf.json
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.12.1

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Install frontend dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Generate Tauri icons
        run: |
          pnpm tauri icon src-tauri/icons/icon.png || true

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}

      - name: Upload build artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            src-tauri/target/release/bundle/**/*.msi
            src-tauri/target/release/bundle/**/*.exe
          retention-days: 5

      - name: Upload build artifacts (macOS)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            src-tauri/target/*/release/bundle/**/*.dmg
            src-tauri/target/*/release/bundle/**/*.app.tar.gz
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/*/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.APP_VERSION }}
          name: XivStrat Desktop ${{ env.APP_VERSION }}
          body: |
            ## 下载说明

            - **Windows**: 下载 `.msi` 或 `.exe` 文件
            - **macOS**: 下载 `.dmg` 文件

            ### 更新内容
            - 查看提交历史了解详细更新
          draft: false
          prerelease: false
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.msi
            artifacts/**/*.exe
            artifacts/**/*.app.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
